// Code generated by MockGen. DO NOT EDIT.
// Source: package/auth/jwt/jwt.go

// Package jwtAuth is a generated GoMock package.
package jwtAuth

import (
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
)

// MockJwt is a mock of Jwt interface.
type MockJwt struct {
	ctrl     *gomock.Controller
	recorder *MockJwtMockRecorder
}

// MockJwtMockRecorder is the mock recorder for MockJwt.
type MockJwtMockRecorder struct {
	mock *MockJwt
}

// NewMockJwt creates a new mock instance.
func NewMockJwt(ctrl *gomock.Controller) *MockJwt {
	mock := &MockJwt{ctrl: ctrl}
	mock.recorder = &MockJwtMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockJwt) EXPECT() *MockJwtMockRecorder {
	return m.recorder
}

// ExtractJwtToken mocks base method.
func (m *MockJwt) ExtractJwtToken(token string) (*JwtData, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ExtractJwtToken", token)
	ret0, _ := ret[0].(*JwtData)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ExtractJwtToken indicates an expected call of ExtractJwtToken.
func (mr *MockJwtMockRecorder) ExtractJwtToken(token interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExtractJwtToken", reflect.TypeOf((*MockJwt)(nil).ExtractJwtToken), token)
}

// GenerateToken mocks base method.
func (m *MockJwt) GenerateToken(data *JwtData, isVA bool) (string, *time.Time, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateToken", data, isVA)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(*time.Time)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GenerateToken indicates an expected call of GenerateToken.
func (mr *MockJwtMockRecorder) GenerateToken(data, isVA interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateToken", reflect.TypeOf((*MockJwt)(nil).GenerateToken), data, isVA)
}

// VerifyAccessToken mocks base method.
func (m *MockJwt) VerifyAccessToken(token, combinedKey string) (*JwtData, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "VerifyAccessToken", token, combinedKey)
	ret0, _ := ret[0].(*JwtData)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// VerifyAccessToken indicates an expected call of VerifyAccessToken.
func (mr *MockJwtMockRecorder) VerifyAccessToken(token, combinedKey interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "VerifyAccessToken", reflect.TypeOf((*MockJwt)(nil).VerifyAccessToken), token, combinedKey)
}
